#!/usr/bin/env node
'use strict';

var path = require('path');
var nounou = require('nounou');
var util = require('util');
var argvHandler = require('../utils').argvHandler;
var clientPath = path.join(__dirname, '../client.js');


var cfgPath = argvHandler(process.argv.slice(2));

nounou(clientPath, {
  args: [cfgPath],
  count: 1
})
  .on('fork', function (client) {
    console.log('[%s] [client:%d] new client start', Date(), client.pid);
  })
  .on('disconnect', function (client) {
    console.error('[%s] [%s] client:%s disconnect, suicide: %s.',
      Date(), process.pid, client.pid, client.suicide);
  })
  .on('expectedExit', function (client, code, signal) {
    console.log('[%s] [%s], client %s died (code: %s, signal: %s)', Date(),
      process.pid, client.pid, code, signal);
  })
  .on('unexpectedExit', function (client, code, signal) {
    var err = new Error(util.format('client %s died (code: %s, signal: %s)',
      client.pid, code, signal));
    err.name = 'ClientDiedError';
    console.error('[%s] [%s] client exit: %s', Date(), process.pid, err.stack);
  });